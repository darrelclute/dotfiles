# Set the prefix to ^A.
unbind C-b
set -g prefix C-A
bind a send-prefix

set -g default-terminal screen-256color

set -sg escape-time 1
setw -g monitor-activity on
set -g visual-activity on
set -g history-limit 100000
setw -g aggressive-resize on

# Vim mode by default
set -g mode-keys vi

# Vim mode copy
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind C-X
bind C-X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind C-C
bind C-C new-window
unbind c
bind c new-window

# detach ^D d
unbind C-D
bind C-D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind C-@
bind C-@ next-window
unbind C-N
bind C-N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind C-A
bind C-A last-window

# prev ^H ^P p ^? 
unbind C-H
bind C-H previous-window
unbind C-P
bind C-P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind C-W
bind C-W list-windows
unbind w
bind w list-windows

# quit \ 
unbind '\'
bind '\' confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind C-L
bind C-L refresh-client
unbind l
bind l refresh-client

# split -v |
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# smart pane switching with vim split awareness
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Binding for SSH in window.
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"
bind-key P command-prompt -p project: "new-window -c %1 vim ; split-window -h -l 100"
bind-key C new-window -t 0 mutt \; split-window -h -l 100 ikhal \; split-window -f -l 80 irssi \; select-pane -t :.0

# Statusline settings
set -g status-interval 1
# Setup powerline statusline
if-shell 'test -z "$POWERLINE_CONFIG_COMMAND"' 'set-environment -g POWERLINE_CONFIG_COMMAND powerline-config; run-shell "env \"\$POWERLINE_CONFIG_COMMAND\" tmux setup"' 'run-shell "env \"\$POWERLINE_CONFIG_COMMAND\" tmux setup"'
