#!/usr/bin/env bash

backups=~/.local/share/dotfiles/backup
action=$1
shift
repo=$1
shift
repobase=$HOME/repos

help() {
    echo "TODO"
}

bootstrap() {
    initrepo $@
    declare -x repo
    repo=$(echo $repodir | sed "s@$HOME\/repos\/@@g")
    linkhome cmds bash screen
}

linkhome() {
    until [ -z $1 ] ; do
        if [ "$(uname)" = "Darwin" -a -d $repobase/$repo/${1}.mac ] ; then
            prog=${1}.mac
        else
            prog=$1
        fi
        mkdir -p $backups/$prog
        for i in $(find $repobase/$repo/$prog -type d | grep -v ^$repobase/$repo/$prog$ | sed "s@$repobase\/$repo\/$prog@$HOME@g") ; do
            mkdir -p $i
        done
        for i in $(find $repobase/$repo/$prog -type f | grep -v ^$repobase/$repo/$prog$ | sed "s@$repobase\/$repo\/$prog@$HOME@g") ; do
            if [ -e $i ] ; then
                mkdir -p $backups/$prog/$(dirname $i | sed "s@$HOME@@")
                mv $i $backups/$prog/$(dirname $i | sed "s@$HOME@@")/$(basename $i)
            fi
        done
        stow -t $HOME -d $repobase/$repo $prog
        if [ "$prog" = "vim" ] ; then
            vim +PluginInstall +qall
        fi
        shift
    done
}

unlinkhome() {
    until [ -z $1 ] ; do
        if [ "$(uname)" = "Darwin" -a -d $repobase/$repo/${1}.mac ] ; then
            prog=${1}.mac
        else
            prog=$1
        fi
        stow -t $HOME -d $repobase/$repo -D $prog
        mv $backups/$prog/* $HOME
        shift
    done
}

refreshrepo() {
    echo git pull $repo
}

initrepo() {
    echo $1
    if [ -n $1 ] ; then
        repodir=$HOME/repos/$1
    else
        repodir=$HOME/repos/$(basename $repo | awk -F'.' '{print $1}')
    fi
    if [ -d $repodir ] ; then
        echo "A repository already exists at $repodir"
        echo "with the following remotes set:"
        echo "git remote -av $repodir"
        echo
        echo "Please run the command again specifying"
        echo "the local directory to clone to relative"
        echo "to $HOME/repos/"
        exit 1
    else
        mkdir -p $repodir
        git clone $repo $repodir
    fi
}

case "$action" in
    bootstrap)
        bootstrap $@
        ;;
    link)
        linkhome $@
        ;;
    unlink)
        unlinkhome $@
        ;;
    init)
        initrepo $@
        ;;
    refresh)
        refreshrepo
        ;;
    *)
        help
        ;;
esac
